version: 2
jobs:
  .build_nanopi: &build_nanopi
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      BB_NUMBER_THREADS: 2
      PARALLEL_MAKE: -j 2
    docker:
      - image: crops/yocto:ubuntu-18.04-builder
    steps:
      - checkout
      - restore_cache:
              keys:
                  - sstate-v3-nanopi-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
                  - sstate-v3-nanopi-{{ .Branch }}-{{ .Revision }}
                  - sstate-v3-nanopi-{{ .Branch }}-
                  - sstate-v3-nanopi-
                  - sstate-v3-
      - restore_cache:
              keys:
                  - dldir-v3-nanopi-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
                  - dldir-v3-nanopi-{{ .Branch }}-{{ .Revision }}
                  - dldir-v3-nanopi-{{ .Branch }}-
                  - dldir-v3-nanopi-
                  - dldir-v3-
      - run:
          name: Build the nanopi-neo-air image
          no_output_timeout: 90m
          command: |
            source .circleci/build.sh nanopi-neo-air nanopi-neo-air
      - save_cache:
              key: dldir-v3-nanopi-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
              paths:
                  - "/tmp/downloads"
      - save_cache:
              key: sstate-v3-nanopi-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
              paths:
                  - "/tmp/sstate-cache"
      - store_artifacts:
          path: pedalpi-src-build/tmp/deploy/images/nanopi-neo-air/
      - persist_to_workspace:
          root: /home/yoctouser/project/pedalpi-src-build/tmp/deploy/images
          paths:
              - nanopi-neo-air
  .build_odroidc2: &build_odroidc2
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      BB_NUMBER_THREADS: 2
      PARALLEL_MAKE: -j 2
    docker:
      - image: crops/yocto:ubuntu-18.04-builder
    steps:
      - checkout
      - restore_cache:
              keys:
                  - sstate-v3-odroidc2-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
                  - sstate-v3-odroidc2-{{ .Branch }}-{{ .Revision }}-
                  - sstate-v3-odroidc2-{{ .Branch }}-
                  - sstate-v3-odroidc2-
                  - sstate-v3-
      - restore_cache:
              keys:
                  - dldir-v3-odroidc2-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
                  - dldir-v3-odroidc2-{{ .Branch }}-{{ .Revision }}-
                  - dldir-v3-odroidc2-{{ .Branch }}-
                  - dldir-v3-odroidc2-
                  - dldir-v3-
      - run:
          name: Build the odroid-c2 image
          no_output_timeout: 90m
          command: |
            source .circleci/build.sh odroid-c2 hardkernel-odroidc2 "pedalpi-dev-platform -c do_image_tar"
      - save_cache:
              key: dldir-v3-odroidc2-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
              paths:
                  - "/tmp/downloads"
      - save_cache:
              key: sstate-v3-odroidc2-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
              paths:
                  - "/tmp/sstate-cache"
      - store_artifacts:
          path: pedalpi-src-build/tmp/deploy/images/hardkernel-odroidc2/
      - persist_to_workspace:
          root: /home/yoctouser/project/pedalpi-src-build/tmp/deploy/images
          paths:
              - hardkernel-odroidc2
  .build_qemux86: &build_qemux86
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      BB_NUMBER_THREADS: 2
      PARALLEL_MAKE: -j 2
    docker:
      - image: crops/yocto:ubuntu-18.04-builder
    steps:
      - checkout
      - restore_cache:
              keys:
                  - sstate-v3-qemux86-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
                  - sstate-v3-qemux86-{{ .Branch }}-{{ .Revision }}-
                  - sstate-v3-qemux86-{{ .Branch }}-
                  - sstate-v3-qemux86-
                  - sstate-v3-
      - restore_cache:
              keys:
                  - dldir-v3-qemux86-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
                  - dldir-v3-qemux86-{{ .Branch }}-{{ .Revision }}-
                  - dldir-v3-qemux86-{{ .Branch }}-
                  - dldir-v3-qemux86-
                  - dldir-v3-
      - run:
          name: Build the qemux86-64 image
          no_output_timeout: 90m
          command: |
            source .circleci/build.sh qemux86-64 qemux86-64
      - save_cache:
              key: dldir-v3-qemux86-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
              paths:
                  - "/tmp/downloads"
      - save_cache:
              key: sstate-v3-qemux86-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
              paths:
                  - "/tmp/sstate-cache"
      - store_artifacts:
          path: pedalpi-src-build/tmp/deploy/images/qemux86-64/
      - persist_to_workspace:
          root: /home/yoctouser/project/pedalpi-src-build/tmp/deploy/images
          paths:
              - qemux86-64
  .build_raspberrypi4: &build_raspberrypi4
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      BB_NUMBER_THREADS: 2
      PARALLEL_MAKE: -j 2
    docker:
      - image: crops/yocto:ubuntu-18.04-builder
    steps:
      - checkout
      - restore_cache:
              keys:
                  - sstate-v3-raspberrypi4-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
                  - sstate-v3-raspberrypi4-{{ .Branch }}-{{ .Revision }}-
                  - sstate-v3-raspberrypi4-{{ .Branch }}-
                  - sstate-v3-raspberrypi4-
                  - sstate-v3-
      - restore_cache:
              keys:
                  - dldir-v3-raspberrypi4-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
                  - dldir-v3-raspberrypi4-{{ .Branch }}-{{ .Revision }}-
                  - dldir-v3-raspberrypi4-{{ .Branch }}-
                  - dldir-v3-raspberrypi4-
                  - dldir-v3-
      - run:
          name: Build the raspberrypi4 image
          no_output_timeout: 90m
          command: |
            source .circleci/build.sh raspberrypi4 raspberrypi4
      - save_cache:
              key: dldir-v3-raspberrypi4-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
              paths:
                  - "/tmp/downloads"
      - save_cache:
              key: sstate-v3-raspberrypi4-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
              paths:
                  - "/tmp/sstate-cache"
      - store_artifacts:
          path: pedalpi-src-build/tmp/deploy/images/raspberrypi4/
      - persist_to_workspace:
          root: /home/yoctouser/project/pedalpi-src-build/tmp/deploy/images
          paths:
              - raspberrypi4
  .build_raspberrypi3: &build_raspberrypi3
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      BB_NUMBER_THREADS: 2
      PARALLEL_MAKE: -j 2
    docker:
      - image: crops/yocto:ubuntu-18.04-builder
    steps:
      - checkout
      - restore_cache:
              keys:
                  - sstate-v3-raspberrypi3-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
                  - sstate-v3-raspberrypi3-{{ .Branch }}-{{ .Revision }}-
                  - sstate-v3-raspberrypi3-{{ .Branch }}-
                  - sstate-v3-raspberrypi3-
                  - sstate-v3-
      - restore_cache:
              keys:
                  - dldir-v3-raspberrypi3-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
                  - dldir-v3-raspberrypi3-{{ .Branch }}-{{ .Revision }}-
                  - dldir-v3-raspberrypi3-{{ .Branch }}-
                  - dldir-v3-raspberrypi3-
                  - dldir-v3-
      - run:
          name: Build the raspberrypi3 image
          no_output_timeout: 90m
          command: |
            source .circleci/build.sh raspberrypi3 raspberrypi3
      - save_cache:
              key: dldir-v3-raspberrypi3-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
              paths:
                  - "/tmp/downloads"
      - save_cache:
              key: sstate-v3-raspberrypi3-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
              paths:
                  - "/tmp/sstate-cache"
      - store_artifacts:
          path: pedalpi-src-build/tmp/deploy/images/raspberrypi3/
      - persist_to_workspace:
          root: /home/yoctouser/project/pedalpi-src-build/tmp/deploy/images
          paths:
              - raspberrypi3
  deploy_nanopi:
    docker:
        - image: making/alpine-java-bash-git
    steps:
        - checkout
        - attach_workspace:
            at: images
        - run:
            name: Deploy the nanopi-neo-air image
            command: |
              filename=$(ls images/nanopi-neo-air/pedalpi-dev-platform-nanopi-neo-air-*.rootfs.sunxi-sdimg | head -n 1)
              github_api_token=$GITHUB_TOKEN_FOR_CIRCLECI owner=auto3000 repo=pedalpi-dev-platform tag=LATEST filename=$filename bash ./upload-github-release-asset.sh
  deploy_odroidc2:
    docker:
        - image: making/alpine-java-bash-git
    steps:
        - checkout
        - attach_workspace:
            at: images
        - run:
            name: Deploy the odroid-c2 image
            command: |
              filename=$(ls images/hardkernel-odroidc2/pedalpi-dev-platform-hardkernel-odroidc2-*.rootfs.wic | head -n 1)
              github_api_token=$GITHUB_TOKEN_FOR_CIRCLECI owner=auto3000 repo=pedalpi-dev-platform tag=LATEST filename=$filename bash ./upload-github-release-asset.sh
  deploy_raspberrypi4:
    docker:
        - image: making/alpine-java-bash-git
    steps:
        - checkout
        - attach_workspace:
            at: images
        - run:
            name: Deploy the raspberrypi4 image
            command: |
              filename=$(ls images/raspberrypi4/pedalpi-dev-platform-raspberrypi4-*.rootfs.rpi-sdimg | head -n 1)
              github_api_token=$GITHUB_TOKEN_FOR_CIRCLECI owner=auto3000 repo=pedalpi-dev-platform tag=LATEST filename=$filename bash ./upload-github-release-asset.sh
  deploy_raspberrypi3:
    docker:
        - image: making/alpine-java-bash-git
    steps:
        - checkout
        - attach_workspace:
            at: images
        - run:
            name: Deploy the raspberrypi3 image
            command: |
              filename=$(ls images/raspberrypi3/pedalpi-dev-platform-raspberrypi3-*.rootfs.rpi-sdimg | head -n 1)
              github_api_token=$GITHUB_TOKEN_FOR_CIRCLECI owner=auto3000 repo=pedalpi-dev-platform tag=LATEST filename=$filename bash ./upload-github-release-asset.sh
  deploy_qemux86:
    docker:
        - image: making/alpine-java-bash-git
    steps:
        - checkout
        - attach_workspace:
            at: images
        - run:
            name: Deploy the qemux86 root filesystem
            command: |
              filename=$(ls images/qemux86-64/pedalpi-dev-platform-qemux86-64-*.rootfs.tar.bz2 | head -n 1)
              github_api_token=$GITHUB_TOKEN_FOR_CIRCLECI owner=auto3000 repo=pedalpi-dev-platform tag=LATEST filename=$filename bash ./upload-github-release-asset.sh

  build_nanopi_step1:
      <<: *build_nanopi

  build_nanopi:
      <<: *build_nanopi

  build_odroidc2_step1:
      <<: *build_odroidc2

  build_odroidc2:
      <<: *build_odroidc2

  build_qemux86_step1:
      <<: *build_qemux86

  build_qemux86:
      <<: *build_qemux86

  build_raspberrypi4_step1:
      <<: *build_raspberrypi4

  build_raspberrypi4:
      <<: *build_raspberrypi4

  build_raspberrypi3_step1:
      <<: *build_raspberrypi3

  build_raspberrypi3:
      <<: *build_raspberrypi3

workflows:
  version: 2
  weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 4"
          filters:
            branches:
              only:
                - master
    jobs:
      - build_raspberrypi4_step1
      - build_raspberrypi3_step1
      - build_nanopi_step1
      - build_qemux86_step1
      - build_raspberrypi4:
          requires:
              - build_raspberrypi4_step1
      - build_raspberrypi3:
          requires:
              - build_raspberrypi3_step1
      - build_nanopi:
          requires:
              - build_nanopi_step1
      - build_qemux86:
          requires:
              - build_qemux86_step1
  build-and-deploy:
    jobs:
      - build_raspberrypi4_step1
      - build_raspberrypi3_step1
      - build_odroidc2_step1:
          filters:
            branches:
              ignore:
                - master
      - build_nanopi_step1
      - build_qemux86_step1
      - build_raspberrypi4:
          requires:
              - build_raspberrypi4_step1
      - build_raspberrypi3:
          requires:
              - build_raspberrypi3_step1
      - build_nanopi:
          requires:
              - build_nanopi_step1
      - build_odroidc2:
          requires:
              - build_odroidc2_step1
          filters:
            branches:
              ignore: master
      - build_qemux86:
          requires:
              - build_qemux86_step1
      - deploy_raspberrypi4:
          requires:
              - build_nanopi
              - build_raspberrypi4
              - build_raspberrypi3
              - build_qemux86
          filters:
            branches:
              only: master
      - deploy_raspberrypi3:
          requires:
              - build_nanopi
              - build_raspberrypi4
              - build_raspberrypi3
              - build_qemux86
          filters:
            branches:
              only: master
      - deploy_nanopi:
          requires:
              - build_nanopi
              - build_raspberrypi4
              - build_raspberrypi3
              - build_qemux86
          filters:
            branches:
              only: master
      - deploy_qemux86:
          requires:
              - build_nanopi
              - build_raspberrypi4
              - build_raspberrypi3
              - build_qemux86
          filters:
            branches:
              only: master
